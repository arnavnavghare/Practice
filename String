#include "StdAfx.h"
#include <iostream>
using namespace std;
#define SIZE 1000

class String{
private:
	char m_str[SIZE];
public:
	String(){
	};
	friend istream &operator >> (istream &in, String &str);
	friend ostream &operator << (ostream &out, String str);

	int StrLen() {
		int i;
		for (i = 0; m_str[i] != '\0'; i++) {
		}
		return i;
	}
/*
	char* Rev() {
		int i;
		for (i = 0; m_str[i] != '\0'; i++) {
		}
		char RevStr[SIZE];
		for(int j=i-1; j>=0; j--){
			RevStr[(i - 1) - j] = m_str[j];
		}
		RevStr[i] = '\0';
		return RevStr;
	}
*/
	String Rev() {
		int i;
		for (i = 0; m_str[i] != '\0'; i++) {
		}
		String s;
		s.m_str[SIZE];
		for(int j=i-1; j>=0; j--){
			s.m_str[(i - 1) - j] = m_str[j];
		}
		s.m_str[i] = '\0';
		return s;
	}

	void concatenate(String& str1) {
		int i = 0, j = 0;
		for (i = StrLen(); i < (StrLen() + str1.StrLen() - 1); i++) {
			m_str[i] = str1.m_str[j];
			j++;
		}
		m_str[i] = '\0';
		cout << m_str << endl;
	}
	
	void ToUpperCase() {
		for (int i = 0; i < StrLen(); i++) {
			if (m_str[i] >= 'a' && m_str[i] <= 'z') {
				m_str[i]= m_str[i] - 32;
			}
		}
		cout << m_str;
	}
	void ToLowerCase() {
		for (int i = 0; i < StrLen(); i++) {
			if (m_str[i] >= 'A' && m_str[i] <= 'Z') {
				m_str[i] = m_str[i] + 32;
			}
		}
		cout << m_str;
	}

	int find(String st){
		int i,j=0;
		for (i=0;i<StrLen();i++){
			int k=i;
			while (m_str[k] == st.m_str[j]){
				if (i+st.StrLen()-1==k){
					return i;
				}
				k++,j++;
			}
			j=0;
		}
	}

	~String() {};

};

istream &operator >> (istream &in, String &str){
	cin.getline(str.m_str, SIZE);
	return in;
}

ostream &operator << (ostream &out, String str){
	out << str.m_str;
	return out;
}

int main() {
	String st1,st2;
	cin>>st1;
	cin>>st2;
	cout<<st1.find(st2);
	return 0;
}
